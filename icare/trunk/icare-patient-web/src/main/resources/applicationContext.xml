<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="com.wisdom"></context:component-scan>

	<!-- 导入外部的properties文件 -->
	<context:property-placeholder location="classpath:application.properties" />
	<!--<context:property-placeholder location="classpath:redis.properties" />-->

	<bean id="propertiesReader"
		  class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:application*.properties</value>
				<value>classpath:application-wechat.properties</value>
			</list>
		</property>
	</bean>

	<!-- 启用spring cache-->
	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- 初始化数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${driverClass}</value>
		</property>
		<property name="url">
			<value>${jdbcUrl}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="passwordCallback">
			<bean class="com.wisdom.datasource.DatabasePasswordCallback">
				<property name="password" value="${jdbc.password}" />
			</bean>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath*:mapper/**/*.xml" />

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="ehelp" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.wisdom.dao.mapper" p:sqlSessionFactoryBeanName="sessionFactory" />
	<!-- 配置声明式事务管理（采用注解的方式） -->
	<!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<tx:annotation-driven transaction-manager="transactionManager" />

	<aop:aspectj-autoproxy />

	<!--<bean id="serviceExecAspect" class="com.group.webFramework.aspect.DaoExecAspect"/>-->
    
    <!-- <bean id="serviceSupport" class="com.group.webFramework.common.ServiceSupport"/>
    <bean id="accountInfoService" class="com.group.renshi.service.system.impl.AccountInfoServiceImpl" parent="serviceSupport"/>
    <bean id="accountInfoAction" class="com.group.renshi.action.system.AccountInfoAction">
     <property name="accountInfoService" ref="accountInfoService">
       </property> 
    </bean> -->
    
    <!--<bean name="mailSend" class="com.group.webFramework.uitl.MailSend" />-->
    
	<!--<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
	 	<!--<property name="host" value="smtp.163.com" />&lt;!&ndash;"${mail.host}" &ndash;&gt;-->
		<!--<property name="port" value="25" />&lt;!&ndash; ${mail.port} "${mail.userName}"${mail.password}&ndash;&gt;-->
		<!--<property name="username" value="jackwangfight@163.com"/>-->
		<!--<property name="password" value="knightjack" />-->
		<!--<property name="javaMailProperties">-->
			<!--<props>-->
				<!--<prop key="mail.smtp.auth">true</prop>-->
			<!--</props>-->
		<!--</property>-->
	<!--</bean>-->
     
    <!--<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">-->
        <!--<property name="from" value="jackwangfight@163.com" />-->
        <!--<property name="subject" value="邮件主题" />-->
        <!--<property name="text" value="邮件内容" />-->
    <!--</bean>-->
    
	 <import resource="applicationContext-cache.xml"/>
</beans>
